<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myweb.system.dao.UserMapper">
    <resultMap id="userMap" type="com.myweb.system.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>

        <!--role关联-->
        <collection property="roles" ofType="com.myweb.system.model.Role">
            <id column="role_id" property="roleId" jdbcType="INTEGER"/>
            <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>

            <!--permission关联-->
            <collection property="permissions" ofType="com.myweb.system.model.Permission">
                <id column="permission_id" property="permissionId" jdbcType="INTEGER"/>
                <result column="pid" property="pid" jdbcType="INTEGER"/>
                <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
                <result column="permission_value" property="permissionValue" jdbcType="VARCHAR"/>
                <result column="permission_icon" property="permissionIcon" jdbcType="VARCHAR"/>
                <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
                <result column="order" property="order" jdbcType="INTEGER"/>
            </collection>

        </collection>
    </resultMap>
    <select id="findUserById" parameterType="long" resultMap="userMap">
        SELECT
          u.*,r.*,p.*
        FROM
          `user` AS u
        INNER JOIN
          `user_role` AS ur
        ON
          u.user_id = ur.user_id
        INNER JOIN
          `role` AS r
        ON
          ur.role_id = r.role_id
        INNER JOIN
          `role_permission` AS rp
        ON
          rp.role_id = r.role_id
        INNER JOIN
          `permission` AS p
        ON
          p.permission_id = rp.permission_id
        WHERE
          u.user_id = #{userId}
    </select>

    <select id="findUserByUsername" parameterType="java.lang.String" resultMap="userMap">
         SELECT
          u.*,r.*,p.*
        FROM
          `user` AS u
        INNER JOIN
          `user_role` AS ur
        ON
          u.user_id = ur.user_id
        INNER JOIN
          `role` AS r
        ON
          ur.role_id = r.role_id
        INNER JOIN
          `role_permission` AS rp
        ON
          rp.role_id = r.role_id
        INNER JOIN
          `permission` AS p
        ON
          p.permission_id = rp.permission_id
        WHERE
          u.username = #{username}
    </select>

    <insert id="addUser" parameterType="com.myweb.system.model.User" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        INSERT INTO
          `user`
        (
          username,
          password,
          real_name,
          create_time
        )
        VALUES
        (
          #{username},
          #{password},
          #{realName},
          #{createTime}
        )
    </insert>

    <insert id="addEmployeeRole" parameterType="com.myweb.system.model.User">
        INSERT INTO
          `user_role`
        (
          user_id,
          role_id
        )
        VALUES
        (
          #{userId},
          2
        )
    </insert>

    <select id="listUser" parameterType="com.myweb.system.model.UserArgs" resultMap="userMap">
        SELECT
          u.*
        FROM
          `user` AS u
        <where>
            <if test="searchKey != null and searchKey != '' and searchValue != null and searchValue != ''">u.${searchKey} like '%${searchValue}%'</if>
        </where>

    </select>

    <delete id="deleteUser" parameterType="java.lang.Long">
        DELETE FROM
          `user`
        WHERE
           user_id = #{userId}
    </delete>

    <delete id="deleteEmployeeRole" parameterType="java.lang.Long">
        DELETE FROM
          `user_role`
        WHERE
          user_id = #{userId}
    </delete>

    <update id="editUser" parameterType="com.myweb.system.model.User">
        UPDATE
          `user`
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="realName != null and realName != ''">real_name = #{realName},</if>
        </set>
        <where>
            user_id = #{userId}
        </where>
    </update>

    <update id="resetPassword">
        UPDATE
          `user` AS u
        SET
          u.password = md5(#{password})
        WHERE
          u.user_id = #{userId}
    </update>

    <update id="editPassword">
        UPDATE
          `user` AS u
        SET
          u.password = md5(#{newPsw})
        WHERE
          u.user_id = #{userId}
    </update>



</mapper>